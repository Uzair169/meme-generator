{"ast":null,"code":"var _jsxFileName = \"/home/uzair/Desktop/Reactjs/meme-generator/src/Meme.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport memesData from \"./memesData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Meme() {\n  _s();\n  // const [memeImage, setMemeImage] = React.useState(\"\")\n\n  const [meme, setMeme] = React.useState({\n    topText: \"\",\n    bottomText: \"\",\n    randomImage: \"\"\n  });\n  function getMemeImage() {\n    const memesArray = memesData.data.memes;\n    const randomNumber = Math.floor(Math.random() * memesArray.length);\n\n    //memesArray[randomNumber].url Can be const {url} = memesArray[randomNumber], this is more of a structuring\n\n    setMemeImage(memesArray[randomNumber].url);\n  }\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form--input\",\n        placeholder: \"Top text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form--input\",\n        placeholder: \"Bottom text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"form--button\",\n        onClick: getMemeImage,\n        children: \"Get a new meme image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: memeImage,\n      className: \"meme--image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}\n_s(Meme, \"XqrF57DKEnfMvQtmwt/ft8vZRFA=\");\n_c = Meme;\nvar _c;\n$RefreshReg$(_c, \"Meme\");","map":{"version":3,"names":["React","memesData","jsxDEV","_jsxDEV","Meme","_s","meme","setMeme","useState","topText","bottomText","randomImage","getMemeImage","memesArray","data","memes","randomNumber","Math","floor","random","length","setMemeImage","url","children","className","type","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","memeImage","_c","$RefreshReg$"],"sources":["/home/uzair/Desktop/Reactjs/meme-generator/src/Meme.js"],"sourcesContent":["import React from \"react\"\nimport memesData from \"./memesData\"\n\nexport default function Meme() {\n    // const [memeImage, setMemeImage] = React.useState(\"\")\n\n    const [meme, setMeme] = React.useState({\n        topText: \"\",\n        bottomText: \"\",\n        randomImage: \"\"\n    })\n\n\n    function getMemeImage() {\n        const memesArray = memesData.data.memes\n        const randomNumber = Math.floor(Math.random() * memesArray.length)\n\n        //memesArray[randomNumber].url Can be const {url} = memesArray[randomNumber], this is more of a structuring\n\n        setMemeImage(memesArray[randomNumber].url)\n\n    }\n\n\n    return (\n        <main>\n            <div className=\"form\">\n                <input type=\"text\" className=\"form--input\" placeholder=\"Top text\" />\n                <input type=\"text\" className=\"form--input\" placeholder=\"Bottom text\" />\n                <button className=\"form--button\" onClick={getMemeImage}>Get a new meme image</button>\n            </div>\n            <img src={memeImage} className=\"meme--image\" />\n        </main>\n    )\n}"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,aAAa;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEnC,eAAe,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EAC3B;;EAEA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,KAAK,CAACQ,QAAQ,CAAC;IACnCC,OAAO,EAAE,EAAE;IACXC,UAAU,EAAE,EAAE;IACdC,WAAW,EAAE;EACjB,CAAC,CAAC;EAGF,SAASC,YAAYA,CAAA,EAAG;IACpB,MAAMC,UAAU,GAAGZ,SAAS,CAACa,IAAI,CAACC,KAAK;IACvC,MAAMC,YAAY,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGN,UAAU,CAACO,MAAM,CAAC;;IAElE;;IAEAC,YAAY,CAACR,UAAU,CAACG,YAAY,CAAC,CAACM,GAAG,CAAC;EAE9C;EAGA,oBACInB,OAAA;IAAAoB,QAAA,gBACIpB,OAAA;MAAKqB,SAAS,EAAC,MAAM;MAAAD,QAAA,gBACjBpB,OAAA;QAAOsB,IAAI,EAAC,MAAM;QAACD,SAAS,EAAC,aAAa;QAACE,WAAW,EAAC;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACpE3B,OAAA;QAAOsB,IAAI,EAAC,MAAM;QAACD,SAAS,EAAC,aAAa;QAACE,WAAW,EAAC;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACvE3B,OAAA;QAAQqB,SAAS,EAAC,cAAc;QAACO,OAAO,EAAEnB,YAAa;QAAAW,QAAA,EAAC;MAAoB;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpF,CAAC,eACN3B,OAAA;MAAK6B,GAAG,EAAEC,SAAU;MAACT,SAAS,EAAC;IAAa;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7C,CAAC;AAEf;AAACzB,EAAA,CA/BuBD,IAAI;AAAA8B,EAAA,GAAJ9B,IAAI;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}